package MyTypes::request;
use strict;
use warnings;


__PACKAGE__->_set_element_form_qualified(0);

sub get_xmlns { 'http://webservice.cdb.ebi.ac.uk/' };

our $XML_ATTRIBUTE_CLASS;
undef $XML_ATTRIBUTE_CLASS;

sub __get_attr_class {
    return $XML_ATTRIBUTE_CLASS;
}

use Class::Std::Fast::Storable constructor => 'none';
use base qw(SOAP::WSDL::XSD::Typelib::ComplexType);

Class::Std::initialize();

{ # BLOCK to scope variables

my %queryString_of :ATTR(:get<queryString>);
my %dataSet_of :ATTR(:get<dataSet>);
my %resultType_of :ATTR(:get<resultType>);
my %profileType_of :ATTR(:get<profileType>);
my %id_of :ATTR(:get<id>);
my %source_of :ATTR(:get<source>);
my %offSet_of :ATTR(:get<offSet>);
my %database_of :ATTR(:get<database>);
my %semanticType_of :ATTR(:get<semanticType>);
my %synonym_of :ATTR(:get<synonym>);
my %email_of :ATTR(:get<email>);

__PACKAGE__->_factory(
    [ qw(        queryString
        dataSet
        resultType
        profileType
        id
        source
        offSet
        database
        semanticType
        synonym
        email

    ) ],
    {
        'queryString' => \%queryString_of,
        'dataSet' => \%dataSet_of,
        'resultType' => \%resultType_of,
        'profileType' => \%profileType_of,
        'id' => \%id_of,
        'source' => \%source_of,
        'offSet' => \%offSet_of,
        'database' => \%database_of,
        'semanticType' => \%semanticType_of,
        'synonym' => \%synonym_of,
        'email' => \%email_of,
    },
    {
        'queryString' => 'SOAP::WSDL::XSD::Typelib::Builtin::string',
        'dataSet' => 'SOAP::WSDL::XSD::Typelib::Builtin::string',
        'resultType' => 'SOAP::WSDL::XSD::Typelib::Builtin::string',
        'profileType' => 'SOAP::WSDL::XSD::Typelib::Builtin::string',
        'id' => 'SOAP::WSDL::XSD::Typelib::Builtin::string',
        'source' => 'SOAP::WSDL::XSD::Typelib::Builtin::string',
        'offSet' => 'SOAP::WSDL::XSD::Typelib::Builtin::int',
        'database' => 'SOAP::WSDL::XSD::Typelib::Builtin::string',
        'semanticType' => 'SOAP::WSDL::XSD::Typelib::Builtin::string',
        'synonym' => 'SOAP::WSDL::XSD::Typelib::Builtin::boolean',
        'email' => 'SOAP::WSDL::XSD::Typelib::Builtin::string',
    },
    {

        'queryString' => 'queryString',
        'dataSet' => 'dataSet',
        'resultType' => 'resultType',
        'profileType' => 'profileType',
        'id' => 'id',
        'source' => 'source',
        'offSet' => 'offSet',
        'database' => 'database',
        'semanticType' => 'semanticType',
        'synonym' => 'synonym',
        'email' => 'email',
    }
);

} # end BLOCK







1;


=pod

=head1 NAME

MyTypes::request

=head1 DESCRIPTION

Perl data type class for the XML Schema defined complexType
request from the namespace http://webservice.cdb.ebi.ac.uk/.






=head2 PROPERTIES

The following properties may be accessed using get_PROPERTY / set_PROPERTY
methods:

=over

=item * queryString


=item * dataSet


=item * resultType


=item * profileType


=item * id


=item * source


=item * offSet


=item * database


=item * semanticType


=item * synonym


=item * email




=back


=head1 METHODS

=head2 new

Constructor. The following data structure may be passed to new():

 { # MyTypes::request
   queryString =>  $some_value, # string
   dataSet =>  $some_value, # string
   resultType =>  $some_value, # string
   profileType =>  $some_value, # string
   id =>  $some_value, # string
   source =>  $some_value, # string
   offSet =>  $some_value, # int
   database =>  $some_value, # string
   semanticType =>  $some_value, # string
   synonym =>  $some_value, # boolean
   email =>  $some_value, # string
 },




=head1 AUTHOR

Generated by SOAP::WSDL

=cut

